{
    "Tomcat cluster with Session Replication": "Session可同步的Tomcat集群",
    "Name": "名称",
    "Description": "描述",
    "The name of the Tomcat cluster service": "Tomcat 集群服务名称",
    "The description of the Tomcat cluster service": "Tomcat 集群服务描述",
    "vxnet": "私有网络",
    "Choose a vxnet to join": "选择要加入的私有网络",
    "Choose a Redis to use and input database number in service properties section below, leave empty if you choose not to use it": "选择依赖的 Redis 服务并在下方服务参数中输入库号，如不需要请不要填写",
    "Choose a MySql to use and related MySql infomation in service properties section below, leave empty if you choose not to use it": "选择依赖的 MySql 服务并在下方服务参数中输入相关信息，如不需要请不要填写",
    "Tomcat Nodes": "Tomcat 节点",
    "Tomcat node properties": "Tomcat 节点参数",
    "loadbalancer": "负载均衡器",
    "Choose a loadbalancer service (When you create loadbalancer, you need to select the Internet type. Loadbalancer listener need to enable Session Sticky. Listener protocol should be http)": "选择要使用的公网负载均衡器（创建时需选择类型为公网，监听器需启用会话保持，监听协议为http ）",
    "CPU": "CPU",
    "CPUs of each node": "每个节点的 CPU 数量",
    "Memory": "内存",
    "memory of each node": "每个节点的内存数量",
    "Node Count": "节点数量",
    "Number of nodes for the cluster to create": "要创建的节点数量",
    "Instance Class": "实例类型",
    "The instance type for the cluster to run, such as high performance, high performance plus": "节点实例类型，比如性能型与超高性能型",
    "Volume Size": "磁盘大小",
    "The volume size for each node": "每个节点磁盘的大小",
    "Log Server Node": "日志服务器节点",
    "Log server to collect all log files from all Tomcat nodes": "日志服务器，收集存储从各个 Tomcat 节点收集的日志",
    "The volume size for this log server": "日志服务器上磁盘的大小",
    "Tomcat cluster service properties": "Tomcat 集群服务参数",
    "User name to access Tomcat manager GUI": "访问 Tomcat 管理员图形界面的用户名",
    "User name to access Tomcat manager GUI, avoid to set it as 'tomcat' because it's already predefined with role 'manager_script'": "访问 Tomcat 管理员图形界面的用户名，请不要使用 'tomcat' 作为用户名，因为它已被预定义且与 'manager_script' 角色关联",
    "Password to access Tomcat manager": "访问 Tomcat 管理员服务的密码",
    "Password to access Tomcat manager GUI and the user 'tomcat' with role 'manager_script', the default password is 'qing0pwd'": "访问 Tomcat 管理员图形界面的用户密码，此密码也是具有 'manager_script' 角色的用户 tomcat 的密码，缺省密码为 'qing0pwd'",
    "Tomcat character encoding": "Tomcat 字符编码方式",
    "Tomcat character encoding, this value will be set in javax.servlet.request.encoding and file.encoding when launching Tomcat, also set in URIEncoding in server.xml": "Tomcat 字符编码方式, 这个值会在 Tomcat 启动时被设置在 javax.servlet.request.encoding 和 file.encoding 参数中，同时也会被设置在 server.xml 的 URIEncoding 参数中",
    "Tomcat logging level": "Tomcat 日志级别",
    "The logging level of log4j within Tomcat scope, settting 'INFO' as default value": "Tomcat 范围内的 log4j 的日志级别, 缺省设置为 'INFO'",
    "Tomcat logging packages": "Tomcat 中需要记录日志的包",
    "Packages to include in the logging, separated by comma. Tomcat defines loggers by Engine and Host names. For example: log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost],log4j.logger.org.apache.catalina.session": "以逗号分隔的需要记录日志的包列表。Tomcat 可以按照引擎和主机名定义日志。例如：log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost],log4j.logger.org.apache.catalina.session",
    "The max number of active threads": "允许的最大线程数",
    "The max number of active threads in Tomcat shared thread pool": "在 Tomcat 共享线程池中允许最大线程数",
    "The minimum number of kept alive threads": "最小的保持活跃的线程数量",
    "The minimum number of threads always kept alive in Tomcat shared thread pool": "在 Tomcat 共享线程池中最小的保持活跃的线程数量",
    "The number of milliseconds before an idle thread shutsdown": "空闲线程被保留的时间",
    "The number of milliseconds before an idle thread shutsdown, unless the number of active threads are less or equal to minSpareThreads": "在当前活跃线程数超过最小活跃线程数的情况下，空闲线程被保留的时间",
    "Java runtime properties": "Java 的运行环境参数",
    "Java runtime properties when running Tomcat, leave empty if you accept our default JVM heap size setting(1/4 memory as xms, and 1/2 memory as xmx). Note: our default setting will not take effect if you input any value in this area, the validaton of JAVA_OPTS should be handled by you ahead of time, otherwise Tomcat server may fail to start": "Tomcat 启动时，Java 的运行环境参数，如果接受我们提供的缺省 Java 虚拟机堆内存大小（1/4内存作为xms，1/2内存作为xmx），就请不要填任何东西，否则缺省配置将会失效。注意：JAVA_OPTS 参数的验证工作需要您自己完成，不恰当的设置很有可能 Tomcat 服务器无法启动",
    "How to get WAR file": "获取 WAR 文件的方式",
    "Choose a way to upload WAR to Tomcat server, the default way is using Tomcat manager UI or command, the other option is QingStor. Note: Tomcat manager could only deploy WAR to single node, we monitor that deployment and copy the deployed WAR file to watched folder of Tomcat FarmWarDeployer, which will distribute this file to other nodes": "选择一种方式上传 WAR 文件到 Tomcat 服务器，缺省方式是使用 Tomcat manager 图形界面或者命令，另外的方式是 QingStor 。注意：Tomcat Manager 只能将 WAR 部署到当前节点，我们会通过监控文件目录变化的方法，将部署的 WAR 文件复制到 Tomcat FarmWarDeployer 监控的目录，之后 FarmWarDeployer 会将文件分发到其他节点",
    "Redis Database": "Redis 数据库",
    "Redis database number": "Redis 库号",
    "Redis Database Number, leave empty if you choose not to use Redis database": "Redis 库号，如不使用 Redis 数据库，请不要填写",
    "access_key_id to access QingStor service for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager": "用于访问存放 WAR 文件的 QingStor 服务的 access_key_id，如选择使用 Tomcat Manager，请不要填写",
    "secret_access_key to access QingStor service for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager": "用于访问存放 WAR 文件的 QingStor 服务的 secret_access_key，如选择使用 Tomcat Manager，请不要填写",
    "zone": "区域",
    "Zone of bucket for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager": "用于访问存放 WAR 文件的 QingStor 服务的存储空间区域，如选择使用 Tomcat Manager，请不要填写",
    "bucket": "存储区域",
    "Bucket name for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager": "用于访问存放 WAR 文件的 QingStor 服务的存储区域，如选择使用 Tomcat Manager，请不要填写",
    "war name": "WAR 文件名称",
    "The web application(WAR) file Name, leave empty if you chooose to use Tomcat Manager": "WAR 文件名，如选择使用 Tomcat Manager，请不要填写",
    "MySql Database": "MySql 数据库",
    "MySql database name": "MySql 数据名",
    "MySql Database Name, leave empty if you choose not to use MySql database": "MySql 数据名，如不使用 MySql 数据库，请不要填写",
    "Datasoure name of Tomcat JDBC connection pool": "Tomcat JDBC 连接池数据源名称",
    "Datasoure name of Tomcat JDBC connection pool to connect MySql database": "连接 MySql 数据库的数据源名称",
    "The mode of MySql IP address": "访问 MySql 数据库的 IP 地址模式",
    "Choose to use MySQL reserved writing or reading IP address, using writable IP as default value": "选择使用高可用写或者读 IP 地址访问 MySql，默认选择使用高可用写 IP 地址",
    "The maximum number of active database connections": "允许的连接数据库的最大连接数",
    "The maximum number of active database connections that can be allocated from this pool at the same time": "允许同时连接数据库的最大连接数",
    "The maximum number of kept database connections": "允许连接保持的最大数",
    "The maximum number of database connections that should be kept in the pool at all times": "允许保持数据库连接的最大连接数",
    "The maximum number of milliseconds before a database connection timeout": "数据库连接超时的允许时间，单位毫秒",
    "The maximum number of milliseconds that the pool will wait (when there are no available connections) for a database connection to be returned before throwing an exception": "数据库超时抛异常之前的允许等待时间",
    "redeploy WAR for QingStor": "基于QingStor重新部署WAR",
    "ajp_connector": "AJP 连接器",
    "ajp_currentThreadCount": "AJP 连接器当前线程数",
    "ajp_currentThreadsBusy": "AJP 连接器当前繁忙的线程数",
    "ajp_maxTime": "AJP 连接器下请求的最长处理时间",
    "ajp_requestCount": "AJP 连接器下的请求数",
    "http_connector": "http 连接器",
    "http_currentThreadCount": "http 连接器当前线程数",
    "http_currentThreadsBusy": "http 连接器当前繁忙的线程数",
    "http_maxTime": "http 连接器下请求的最长处理时间",
    "http_requestCount": "http 连接器下的请求数",
    "connector": "连接器",
    "currentThreadCount": "当前线程数",
    "currentThreadsBusy": "当前繁忙的线程数",
    "maxTime": "请求的最长处理时间",
    "requestCount": "请求数",
    "ms": "毫秒",
    "count": "数量"
}
