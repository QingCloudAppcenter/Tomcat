{
    "Tomcat cluster with Session Replication": "Tomcat cluster with Session Replication",
    "Name": "Name",
    "Description": "Description",
    "The name of the Tomcat cluster service": "The name of the Tomcat cluster service",
    "The description of the Tomcat cluster service": "The description of the Tomcat cluster service",
    "vxnet": "vxnet",
    "Choose a vxnet to join": "Choose a vxnet to join",
    "Choose a Redis to use and input database number in service properties section below, leave empty if you choose not to use it": "Choose a Redis to use and input database number in service properties section below, leave empty if you choose not to use it",
    "Choose a MySql to use and related MySql infomation in service properties section below, leave empty if you choose not to use it": "Choose a MySql to use and related MySql infomation in service properties section below, leave empty if you choose not to use it",
    "Tomcat Nodes": "Tomcat Nodes",
    "Tomcat node properties": "Tomcat node properties",
    "loadbalancer": "loadbalancer",
    "Choose a loadbalancer service (When you create loadbalancer, you need to select the Internet type. Loadbalancer listener need to enable Session Sticky. Listener protocol should be http)": "Choose a loadbalancer service (When you create loadbalancer, you need to select the Internet type. Loadbalancer listener need to enable Session Sticky. Listener protocol should be http)",
    "CPU": "CPU",
    "CPUs of each node": "CPUs of each node",
    "Memory": "Memory",
    "memory of each node": "memory of each node",
    "Node Count": "Node Count",
    "Number of nodes for the cluster to create": "Number of nodes for the cluster to create",
    "Instance Class": "Instance Class",
    "The instance type for the cluster to run, such as high performance, high performance plus": "The instance type for the cluster to run, such as high performance, high performance plus",
    "Volume Size": "Volume Size",
    "The volume size for each node": "The volume size for each node",
    "Log Server Node": "Log Server Node",
    "Log server to collect all log files from all Tomcat nodes": "Log server to collect all log files from all Tomcat nodes",
    "The volume size for this log server": "The volume size for this log server",
    "Tomcat cluster service properties": "Tomcat cluster service properties",
    "User name to access Tomcat manager GUI": "User name to access Tomcat manager GUI",
    "User name to access Tomcat manager GUI, avoid to set it as 'tomcat' because it's already predefined with role 'manager_script'": "User name to access Tomcat manager GUI, avoid to set it as 'tomcat' because it's already predefined with role 'manager_script'",
    "Password to access Tomcat manager": "Password to access Tomcat manager",
    "Password to access Tomcat manager GUI and the user 'tomcat' with role 'manager_script', the default password is 'qing0pwd'": "Password to access Tomcat manager GUI and the user 'tomcat' with role 'manager_script', the default password is 'qing0pwd'",
    "Tomcat character encoding": "Tomcat character encoding",
    "Tomcat character encoding, this value will be set in javax.servlet.request.encoding and file.encoding when launching Tomcat, also set in URIEncoding in server.xml": "Tomcat character encoding, this value will be set in javax.servlet.request.encoding and file.encoding when launching Tomcat, also set in URIEncoding in server.xml",
    "Tomcat logging level": "Tomcat logging level",
    "The logging level of log4j within Tomcat scope, settting 'INFO' as default value": "The logging level of log4j within Tomcat scope, settting 'INFO' as default value",
    "Tomcat logging packages": "Tomcat logging packages",
    "Packages to include in the logging, separated by comma. Tomcat defines loggers by Engine and Host names. For example: log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost],log4j.logger.org.apache.catalina.session": "Packages to include in the logging, separated by comma. Tomcat defines loggers by Engine and Host names. For example: log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost],log4j.logger.org.apache.catalina.session",
    "The max number of active threads": "The max number of active threads",
    "The max number of active threads in Tomcat shared thread pool": "The max number of active threads in Tomcat shared thread pool",
    "The minimum number of kept alive threads": "The minimum number of kept alive threads",
    "The minimum number of threads always kept alive in Tomcat shared thread pool": "The minimum number of threads always kept alive in Tomcat shared thread pool",
    "The number of milliseconds before an idle thread shutsdown": "The number of milliseconds before an idle thread shutsdown",
    "The number of milliseconds before an idle thread shutsdown, unless the number of active threads are less or equal to minSpareThreads": "The number of milliseconds before an idle thread shutsdown, unless the number of active threads are less or equal to minSpareThreads",
    "Java runtime properties": "Java runtime properties",
    "Java runtime properties when running Tomcat, leave empty if you accept our default JVM heap size setting(1/4 memory as xms, and 1/2 memory as xmx). Note: our default setting will not take effect if you input any value in this area, the validaton of JAVA_OPTS should be handled by you ahead of time, otherwise Tomcat server may fail to start": "Java runtime properties when running Tomcat, leave empty if you accept our default JVM heap size setting(1/4 memory as xms, and 1/2 memory as xmx). Note: our default setting will not take effect if you input any value in this area, the validaton of JAVA_OPTS should be handled by you ahead of time, otherwise Tomcat server may fail to start",
    "How to get WAR file": "How to get WAR file",
    "Choose a way to upload WAR to Tomcat server, the default way is using Tomcat manager UI or command, the other option is QingStor. Note: Tomcat manager could only deploy WAR to single node, we monitor that deployment and copy the deployed WAR file to watched folder of Tomcat FarmWarDeployer, which will distribute this file to other nodes": "Choose a way to upload WAR to Tomcat server, the default way is using Tomcat manager UI or command, the other option is QingStor. Note: Tomcat manager could only deploy WAR to single node, we monitor that deployment and copy the deployed WAR file to watched folder of Tomcat FarmWarDeployer, which will distribute this file to other nodes",
    "Redis Database": "Redis Database",
    "Redis database number": "Redis database number",
    "Redis Database Number, leave empty if you choose not to use Redis database": "Redis Database Number, leave empty if you choose not to use Redis database",
    "access_key_id to access QingStor service for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager": "access_key_id to access QingStor service for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager",
    "secret_access_key to access QingStor service for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager": "secret_access_key to access QingStor service for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager",
    "zone": "zone",
    "Zone of bucket for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager": "Zone of bucket for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager",
    "bucket": "bucket",
    "Bucket name for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager": "Bucket name for web application(WAR) deployment, leave empty if you chooose to use Tomcat Manager",
    "war name": "war name",
    "The web application(WAR) file Name, leave empty if you chooose to use Tomcat Manager": "The web application(WAR) file Name, leave empty if you chooose to use Tomcat Manager",
    "MySql Database": "MySql Database",
    "MySql database name": "MySql database name",
    "The mode of MySql IP address": "The mode of MySql IP address",
    "Choose to use MySQL reserved writing or reading IP address, using writable IP as default value": "Choose to use MySQL reserved writing or reading IP address, using writable IP as default value",
    "MySql Database Name, leave empty if you choose not to use MySql database": "MySql Database Name, leave empty if you choose not to use MySql database",
    "Datasoure name of Tomcat JDBC connection pool": "Datasoure name of Tomcat JDBC connection pool",
    "Datasoure name of Tomcat JDBC connection pool to connect MySql database": "Datasoure name of Tomcat JDBC connection pool to connect MySql database",
    "The maximum number of active database connections": "The maximum number of active database connections",
    "The maximum number of active database connections that can be allocated from this pool at the same time": "The maximum number of active database connections that can be allocated from this pool at the same time",
    "The maximum number of kept database connections": "The maximum number of kept database connections",
    "The maximum number of database connections that should be kept in the pool at all times": "The maximum number of database connections that should be kept in the pool at all times",
    "The maximum number of milliseconds before a database connection timeout": "The maximum number of milliseconds before a database connection timeout",
    "The maximum number of milliseconds that the pool will wait (when there are no available connections) for a database connection to be returned before throwing an exception": "The maximum number of milliseconds that the pool will wait (when there are no available connections) for a database connection to be returned before throwing an exception",
    "redeploy WAR for QingStor": "redeploy WAR for QingStor",
    "ajp_connector": "AJP connector",
    "ajp_currentThreadCount": "Current thread count of AJP connector",
    "ajp_currentThreadsBusy": "Current busy thread count of AJP connector",
    "ajp_maxTime": "The max request processing time of AJP connector",
    "ajp_requestCount": "Requst count of AJP connector",
    "http_connector": "http connector",
    "http_currentThreadCount": "Current thread count of http connector",
    "http_currentThreadsBusy": "Current busy thread count of http connector",
    "http_maxTime": "The max request processing time of http connector",
    "http_requestCount": "Requst count of http connector",
    "connector": "connector",
    "currentThreadCount": "Current thread count",
    "currentThreadsBusy": "Current busy thread count",
    "maxTime": "The max request processing time",
    "requestCount": "Requst count",
    "ms": "ms",
    "count": "count"
}
